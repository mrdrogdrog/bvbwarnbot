image: golang:latest

variables:
  REPO_NAME: git.openschubla.de/tilman/bvbwarnbot

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - go get ./...

stages:
  - test
  - build
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - go build -race -ldflags "-extldflags '-static'" -o bvbwarnbot-telegram $REPO_NAME/cmd/bvbwarnbot-telegram
  artifacts:
    paths:
      - bvbwarnbot-telegram

docker:
  stage: deploy
  image: docker:19.03.5
  environment:
    name: dipper
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
    - (docker stop bvbwarnbot-telegram && docker rm bvbwarnbot-telegram) || true
    - docker run -v /etc/bvbwarnbot.yaml:/opt/bvbwarnbot/config.yaml:ro -d --name bvbwarnbot $CI_REGISTRY_IMAGE:latest
